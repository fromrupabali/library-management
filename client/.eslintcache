[{"F:\\Library-management\\client\\src\\index.js":"1","F:\\Library-management\\client\\src\\reportWebVitals.js":"2","F:\\Library-management\\client\\src\\App.js":"3","F:\\Library-management\\client\\src\\containers\\Home\\Home.js":"4","F:\\Library-management\\client\\src\\containers\\BookReader\\BookReader.js":"5","F:\\Library-management\\client\\src\\containers\\BookSelf\\BookSelf.js":"6","F:\\Library-management\\client\\src\\containers\\AdminControl\\AdminControl.js":"7","F:\\Library-management\\client\\src\\components\\NavBar\\NavBar.js":"8","F:\\Library-management\\client\\src\\components\\Book\\Book.js":"9","F:\\Library-management\\client\\src\\components\\AdminBook\\AdminBook.js":"10","F:\\Library-management\\client\\src\\components\\BooksCollection\\BooksCollection.js":"11","F:\\Library-management\\client\\src\\components\\Footer\\Footer.js":"12","F:\\Library-management\\client\\src\\containers\\Layout\\Layout.js":"13","F:\\Library-management\\client\\src\\components\\Review\\Review.js":"14","F:\\Library-management\\client\\src\\containers\\UserControl\\SignIn\\SignIn.js":"15","F:\\Library-management\\client\\src\\containers\\UserControl\\SignUp\\Signup.js":"16","F:\\Library-management\\client\\src\\components\\Modals\\AddBookModal\\AddBookModal.js":"17","F:\\Library-management\\client\\src\\components\\Modals\\BackDrop\\BackDrop.js":"18","F:\\Library-management\\client\\src\\components\\Modals\\SpinnerModal\\SpinnerModal.js":"19","F:\\Library-management\\client\\src\\store\\reducers\\index.js":"20","F:\\Library-management\\client\\src\\store\\reducers\\authReducer.js":"21","F:\\Library-management\\client\\src\\store\\actions\\actionTypes.js":"22","F:\\Library-management\\client\\src\\components\\Modals\\UserMenuModal\\UserMenuModal.js":"23","F:\\Library-management\\client\\src\\components\\Modals\\BackDrop2\\BackDrop2.js":"24","F:\\Library-management\\client\\src\\components\\Modals\\UpdateBookModal\\UpdateBooModal.js":"25","F:\\Library-management\\client\\src\\containers\\SavedBooks\\SavedBooks.js":"26","F:\\Library-management\\client\\src\\components\\Modals\\PaymentModal\\PaymentModal.js":"27","F:\\Library-management\\client\\src\\components\\Modals\\BackDrop3\\BackDrop3.js":"28","F:\\Library-management\\client\\src\\containers\\Payment\\Payment.js":"29","F:\\Library-management\\client\\src\\components\\Modals\\AdminLoginModal\\AdminLoginModal.js":"30","F:\\Library-management\\client\\src\\components\\Modals\\DeleteBookModal\\DeleteBookModal.js":"31","F:\\Library-management\\client\\src\\containers\\Search\\Search.js":"32","F:\\Library-management\\client\\src\\store\\reducers\\dataReducer.js":"33","F:\\Library-management\\client\\src\\Utils\\utils.js":"34"},{"size":1103,"mtime":1609524864222,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"36"},{"size":1411,"mtime":1609842917265,"results":"38","hashOfConfig":"36"},{"size":2794,"mtime":1609855225398,"results":"39","hashOfConfig":"36"},{"size":11491,"mtime":1609854987952,"results":"40","hashOfConfig":"36"},{"size":4704,"mtime":1609853240737,"results":"41","hashOfConfig":"36"},{"size":15655,"mtime":1609853495498,"results":"42","hashOfConfig":"36"},{"size":3294,"mtime":1609842599773,"results":"43","hashOfConfig":"36"},{"size":518,"mtime":1609847938940,"results":"44","hashOfConfig":"36"},{"size":818,"mtime":1609852405758,"results":"45","hashOfConfig":"36"},{"size":927,"mtime":1609847095492,"results":"46","hashOfConfig":"36"},{"size":181,"mtime":1608810130955,"results":"47","hashOfConfig":"36"},{"size":2133,"mtime":1609853291311,"results":"48","hashOfConfig":"36"},{"size":1050,"mtime":1609844153211,"results":"49","hashOfConfig":"36"},{"size":5048,"mtime":1609824982103,"results":"50","hashOfConfig":"36"},{"size":5253,"mtime":1609822473176,"results":"51","hashOfConfig":"36"},{"size":500,"mtime":1608987125456,"results":"52","hashOfConfig":"36"},{"size":207,"mtime":1609350441299,"results":"53","hashOfConfig":"36"},{"size":714,"mtime":1609220707307,"results":"54","hashOfConfig":"36"},{"size":214,"mtime":1609852636970,"results":"55","hashOfConfig":"36"},{"size":1511,"mtime":1609853821712,"results":"56","hashOfConfig":"36"},{"size":297,"mtime":1609852528600,"results":"57","hashOfConfig":"36"},{"size":501,"mtime":1609350727568,"results":"58","hashOfConfig":"36"},{"size":209,"mtime":1609350252537,"results":"59","hashOfConfig":"36"},{"size":513,"mtime":1609576544700,"results":"60","hashOfConfig":"36"},{"size":2178,"mtime":1609853915337,"results":"61","hashOfConfig":"36"},{"size":518,"mtime":1609670041631,"results":"62","hashOfConfig":"36"},{"size":209,"mtime":1609670026761,"results":"63","hashOfConfig":"36"},{"size":1933,"mtime":1609843852574,"results":"64","hashOfConfig":"36"},{"size":478,"mtime":1609738260897,"results":"65","hashOfConfig":"36"},{"size":513,"mtime":1609744482575,"results":"66","hashOfConfig":"36"},{"size":1782,"mtime":1609853699998,"results":"67","hashOfConfig":"36"},{"size":457,"mtime":1609852588656,"results":"68","hashOfConfig":"36"},{"size":97,"mtime":1609854286060,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"rekjzv",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"F:\\Library-management\\client\\src\\index.js",[],["144","145"],"F:\\Library-management\\client\\src\\reportWebVitals.js",[],"F:\\Library-management\\client\\src\\App.js",[],"F:\\Library-management\\client\\src\\containers\\Home\\Home.js",["146"],"import React, { useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\nimport { server } from '../../Utils/utils';\r\n\r\nimport Collection from '../../components/BooksCollection/BooksCollection';\r\nimport './Home.css';\r\nimport Footer from '../../components/Footer/Footer';\r\n\r\nfunction Home(props){\r\n    const fetchFeed = async() =>{\r\n        try {\r\n            const response = await axios.post(\r\n                server,\r\n                {\r\n                  query:`\r\n                   query{\r\n                    userFeed{\r\n                      _id\r\n                      name\r\n                      books{\r\n                        _id\r\n                        bookCoverUrl\r\n                        bookFileUrl\r\n                        title\r\n                        author\r\n                      }\r\n                    }\r\n                  }\r\n                   `  \r\n             }\r\n         );\r\n         console.log(response);\r\n         props.homeSet(response.data.data.userFeed);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    let booksCollection;\r\n    if(props.homeSetUp){\r\n        booksCollection = props.data.map(collection => {\r\n            return<Collection\r\n                        key={collection._id}\r\n                        id={collection._id}\r\n                        name={collection.name}\r\n                        books={collection.books}\r\n                      />\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        if(!props.homeSetUp){\r\n            fetchFeed()\r\n        }\r\n    }, []);\r\n     return(\r\n            <div style={{paddingTop:\"70px\"}}>\r\n                <div className=\"header\">\r\n                    <div className=\"header-text\">\r\n                       <h1 style={{textAlign:\"center\", margin:\"0\", color:\"white\", width:\"100%\", textTransform:\"uppercase\", padding:\"60px 0 0 0\"}}>Read millions of Books</h1>\r\n                       <p style={{textAlign:\"center\", margin:\"0\", color:\"white\", width:\"100%\", fontSize:\"20px\", fontStyle:\"italic\"}}>\"There is no friend as loyal as a book\"</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"CollectionsContainer\">\r\n                   {booksCollection}\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        homeSetUp: state.data.homeSetup,\r\n        data: state.data.data\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n      homeSet: (data) => {\r\n          dispatch ({\r\n             type: actionTypes.HOME_SETUP,\r\n             data\r\n          });\r\n       }\r\n    };\r\n };\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps)(Home);\r\n\r\n","F:\\Library-management\\client\\src\\containers\\BookReader\\BookReader.js",["147","148"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Document, Page,pdfjs } from \"react-pdf\";\r\nimport { FacebookShareButton, RedditShareButton,RedditIcon,WhatsappShareButton, WhatsappIcon,FacebookIcon,TwitterShareButton ,TwitterIcon } from \"react-share\"\r\n\r\nimport { connect } from 'react-redux';\r\nimport { server, domain } from '../../Utils/utils';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBookmark, faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './BookReader.css';\r\nimport Review from '../../components/Review/Review';\r\nimport PaymentModal from '../../components/Modals/PaymentModal/PaymentModal';\r\nimport SpinnerModal from '../../components/Modals/SpinnerModal/SpinnerModal'; \r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\r\n\r\n function BookReader(props){\r\n     const [reviews, setReviews] = useState([]);\r\n     const [numPages, setNumPages] = useState(null);\r\n     const [pageNumber, setPageNumber] = useState(1);\r\n     const [bookDoc, setBook] = useState({});\r\n     const [reviewText, setReviewText] = useState('');\r\n     const [complete, setComplete] = useState(false);\r\n     const [save, setSave] = useState(false);\r\n     const [paid, setPaid] = useState(false);\r\n     const [redirect, setRedirect]=useState(null);\r\n     const [rating, setRating] = useState(5);\r\n     const [spinner, setSpinner] = useState(false);\r\n\r\n     const fetchBook = async () => {\r\n      setSpinner(true);\r\n      const book1 = await axios.post(\r\n        server,\r\n        {\r\n            query:`\r\n              query{\r\n                  book(bookId:\"${props.match.params.bookId}\"){\r\n                      _id\r\n                      title\r\n                      author\r\n                      paidStatus\r\n                      bookFileUrl\r\n                      bookCoverUrl\r\n                      userReviews{\r\n                        _id\r\n                        reviewText\r\n                        rating\r\n                        createdAt\r\n                        user{\r\n                          _id\r\n                          userName\r\n                         }\r\n                      }\r\n                  }\r\n              }`\r\n        }\r\n    );\r\n    setSpinner(false);\r\n    setBook(book1.data.data.book);\r\n    console.log(book1);\r\n    setReviews(book1.data.data.book.userReviews);\r\n    setComplete(true);\r\n\r\n    if(book1.data.data.book.paidStatus && !props.paidMemberShip){\r\n       setPaid(true);\r\n    }else{\r\n        setPaid(false);\r\n    }\r\n }\r\n\r\n\r\n function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n  function nextPage() {\r\n      if(pageNumber < numPages){\r\n         setPageNumber(pageNumber + 1);\r\n      }\r\n  }\r\n  function prevPage() {\r\n    if(pageNumber > 1){\r\n        setPageNumber(pageNumber - 1);\r\n    } \r\n }\r\n const reviewTextHandler = (e) =>{\r\n     setReviewText(e.target.value);\r\n }\r\n const addreviewHandler = async()=>{\r\n      try {\r\n          setSpinner(true);\r\n          let reviewTxt = reviewText.replace(/(?:\\r\\n|\\r|\\n)/g, '');\r\n          const createReview = await axios.post(\r\n              server,\r\n              {\r\n                  query:`\r\n                     mutation{\r\n                        createReview(reviewInput:\r\n                            {reviewText:\"${reviewTxt}\",\r\n                              userId:\"${props.userId}\",\r\n                              bookId:\"${bookDoc._id}\",\r\n                              rating:${rating}}){\r\n                                   _id\r\n                                  reviewText\r\n                                  createdAt\r\n                                  rating\r\n                            user{\r\n                              _id\r\n                              userName\r\n                            }\r\n                          }\r\n                     }\r\n                  `\r\n              }\r\n          );\r\n          setReviewText('');\r\n          console.log(createReview);\r\n          setReviews(createReview.data.data.createReview);\r\n          setSpinner(false);\r\n\r\n      } catch (error) {\r\n          throw error;\r\n      }\r\n }\r\n const bookMarkHandler = async() =>{\r\n     setSave(true);\r\n     console.log(\"User id\",props.userId);\r\n     await axios.post(\r\n         server,\r\n         {\r\n             query:`\r\n                mutation{\r\n                    saveBook(userId:\"${props.userId}\", bookId:\"${bookDoc._id}\"){\r\n                        _id\r\n                    }\r\n                }\r\n             `\r\n         }\r\n     )\r\n }\r\n const bookMarkRemoverHandler = async() => {\r\n     setSave(false);\r\n     await axios.post(\r\n        server,\r\n        {\r\n            query:`\r\n               mutation{\r\n                   removeBook(userId:\"${props.userId}\", bookId:\"${bookDoc._id}\"){\r\n                       _id\r\n                   }\r\n               }\r\n            `\r\n        }\r\n    )\r\n };\r\n const paymentHandler = () => {\r\n     if(localStorage.TOKEN){\r\n        setRedirect(<Redirect to=\"/payment\"/>);\r\n     }else{\r\n         setRedirect(<Redirect to=\"/user/signin\"/>);\r\n     }\r\n }\r\n const ratingHandler = (rat) =>{\r\n     setRating(rat);\r\n }\r\n    useEffect(() => {\r\n        fetchBook()\r\n        document.title =\"Book\";\r\n        window.scrollTo(0,0);\r\n    },[]);\r\n    const ratings = [\r\n        {\r\n            id:1\r\n        },\r\n        {\r\n            id:2\r\n        },\r\n        {\r\n            id:3\r\n        },\r\n        {\r\n            id:4\r\n        },\r\n        {\r\n            id:5\r\n        }\r\n\r\n    ];\r\n    const all_ratings =  ratings.map(rat => {\r\n       if(rat.id > rating){\r\n           return<button className=\"not-active-rating\" onClick={()=>ratingHandler(rat.id)} key={rat.id} ><FontAwesomeIcon  icon={faStar}/></button>\r\n       }else{\r\n        return<button className=\"active-rating\" onClick={()=>ratingHandler(rat.id)} key={rat.id}><FontAwesomeIcon  icon={faStar}/></button>\r\n       }\r\n    });\r\n   let  saveButton;\r\n    if(localStorage.TOKEN){\r\n       saveButton =  save ?  <button onClick={bookMarkRemoverHandler} className=\"save-book\" ><span style={{margin:\"0 5px\"}}><FontAwesomeIcon icon={faBookmark}/></span>Save</button>:\r\n        <button onClick={bookMarkHandler} className=\"save-book-2\" ><span style={{margin:\"0 5px\"}}><FontAwesomeIcon icon={faBookmark}/></span>Save</button>\r\n    }else{\r\n        saveButton = <Link className=\"user-save-link\" to=\"/user/signin\"><span><FontAwesomeIcon icon={faBookmark}/></span>Save</Link>\r\n    }\r\n    let bookMain;\r\n    if(complete && props.userSetUp){\r\n        bookMain = <div>\r\n            {redirect}\r\n        \r\n         <PaymentModal show={paid}>\r\n              <div className=\"premium-membership\">\r\n                <h3>This book is available for premium members.</h3>\r\n                <p>Get premium membership and read paid books</p>\r\n                <button onClick={paymentHandler}>Get premium membership</button>\r\n              </div>\r\n        </PaymentModal>\r\n        <div className=\"BookReaderContainer\">\r\n        <div>\r\n          <div className=\"BookHeader\">\r\n               <div className=\"BookReaderCover\">\r\n                 <img src={bookDoc.bookCoverUrl ? bookDoc.bookCoverUrl :\"https://shopcatalog.com/wp-content/uploads/2018/10/saltwater.jpg\"} alt=\"book\"/>\r\n               </div>\r\n                <div className=\"BookReaderIntro\">\r\n                    <h1>{bookDoc.title}</h1>\r\n                    <p style={{fontStyle:\"italic\"}}>{bookDoc.author}</p>\r\n                    <div style={{padding:\"10px 0\"}}>\r\n                     <p style={{fontSize:\"20px\", color:\"orangered\", fontWeight:\"bold\"}}>Share on</p>\r\n                    <FacebookShareButton\r\n                     url={\"https://library.com/book/\"+props.match.params.bookId}\r\n                     hashtag=\"#programing joke\">\r\n                     <FacebookIcon  size={32} round={true} />\r\n                 </FacebookShareButton>\r\n                 <TwitterShareButton\r\n                     url={\"https://library.com/book/\"+props.match.params.bookId}\r\n                     >\r\n                     <TwitterIcon  size={32} round={true} />\r\n                 </TwitterShareButton>\r\n                 <RedditShareButton\r\n                     url={\"https://library.com/book/\"+props.match.params.bookId}\r\n                    >\r\n                     <RedditIcon  size={32} round={true} />\r\n                 </RedditShareButton>\r\n                 <WhatsappShareButton\r\n                     url={\"https://library.com/book/\"+props.match.params.bookId}\r\n                     >\r\n                     <WhatsappIcon  size={32} round={true} />\r\n                 </WhatsappShareButton>\r\n                 </div>\r\n                { saveButton }\r\n                </div>\r\n            </div>\r\n            <div className=\"BookPages\">\r\n            <Document\r\n               file={bookDoc.bookFileUrl}\r\n               onLoadSuccess={onDocumentLoadSuccess}\r\n             >\r\n         \r\n           <Page  pageNumber={pageNumber}/>\r\n         </Document>\r\n             {/* Jump to page  <input value={jPage} onChange={jumpInputHandler}  type=\"number\"/> <button onClick={jumpPage}>jump</button> */}\r\n             <p>Page {pageNumber} of {numPages}</p>\r\n             <button className=\"page-change\" onClick={prevPage}>Prev</button>\r\n             <button className=\"page-change\" onClick={nextPage}>Next</button>\r\n          </div>\r\n        </div>\r\n        </div>\r\n        <div className=\"user-reviews\">\r\n           {\r\n               localStorage.TOKEN ?  \r\n                    <div>\r\n                     <h3>Reviews and ratings</h3>\r\n                     <div className=\"review-container\">\r\n                        <div style={{margin:\"10px 0\"}}>\r\n                           {all_ratings}\r\n                        </div>\r\n                         <textarea value={reviewText} onChange={reviewTextHandler}  placeholder=\"Write a review\"/>\r\n                        { reviewText ?  <button className=\"review-button\" onClick={addreviewHandler}>Review</button>: <button className=\"review-button\"  disabled={true}>Review</button> }\r\n                     </div>\r\n                     {\r\n                         reviews.map(review => <Review \r\n                                                 key={review._id}\r\n                                                 text={review.reviewText}\r\n                                                 rating={review.rating}\r\n                                                 user={review.user}\r\n                                                 date={review.createdAt}\r\n                                                 userId={props.userId}\r\n                                                />)\r\n                     }\r\n               </div>: \r\n               <div style={{width:\"100%\", border:\"1px solid #eeee\", padding:\"80px 0\", borderRadius:\"10px\", textAlign:\"center\"}}>\r\n                   <Link className=\"sign-see-reviews\" to=\"/user/signin\"> Sign in to see reviews</Link>\r\n               </div>\r\n           }\r\n        </div>\r\n     </div>\r\n    }else{\r\n        bookMain = <div></div>\r\n    }\r\n    return<div>\r\n         <SpinnerModal show={spinner}></SpinnerModal>\r\n         {bookMain}\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n       userSetUp:state.auth.userSetUp,\r\n       auth: state.auth.auth,\r\n       userId: state.auth.userId,\r\n       paidMemberShip: state.auth.paidMemberShip\r\n    }\r\n }\r\n \r\n\r\n \r\n export default connect(mapStateToProps)(BookReader);\r\n\r\n","F:\\Library-management\\client\\src\\containers\\BookSelf\\BookSelf.js",["149"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { server } from '../../Utils/utils';\r\n\r\nimport './BookSelf.css';\r\nimport Book from '../../components/Book/Book';\r\n\r\nfunction BookSelf(props) {\r\n       const [exploreCategory, setCategory] = useState({});\r\n       const [isLoading, setLoading] = useState(false);\r\n\r\n       const fetchExploreCategory = async() =>{\r\n           try {\r\n               console.log(\"catId\",props.match.params.catId);\r\n               const exCategory = await axios.post(\r\n                   server,\r\n                   {\r\n                       query:`\r\n                          query{\r\n                              exploreCategory(catId:\"${props.match.params.catId}\"){\r\n                                categories{\r\n                                    _id\r\n                                    name\r\n                                  }\r\n                                  books{\r\n                                    _id\r\n                                    title\r\n                                    author\r\n                                    bookCoverUrl\r\n                                  }\r\n                              }\r\n                          }\r\n                       `\r\n                   }\r\n               );\r\n               setCategory(exCategory.data.data.exploreCategory);\r\n               console.log(\"Category\",exCategory);\r\n               setLoading(true);\r\n\r\n           } catch (error) {\r\n               throw error;\r\n           }\r\n       }\r\n       const switchCategory = async(catId)=> {\r\n            try {\r\n                console.log(catId);\r\n                const exCategory = await axios.post(\r\n                    server,\r\n                    {\r\n                        query:`\r\n                           query{\r\n                               exploreCategory(catId:\"${catId}\"){\r\n                                 categories{\r\n                                     _id\r\n                                     name\r\n                                   }\r\n                                   books{\r\n                                     _id\r\n                                     title\r\n                                     author\r\n                                     bookCoverUrl\r\n                                     categoryId\r\n                                   }\r\n                               }\r\n                           }\r\n                        `\r\n                    }\r\n                );\r\n                setCategory(exCategory.data.data.exploreCategory);\r\n                console.log(\"Category\",exCategory);\r\n                setLoading(true);\r\n            } catch (error) {\r\n                throw error;\r\n            }\r\n       } \r\n       useEffect(() => {\r\n           fetchExploreCategory()\r\n       }, [ ]);\r\n\r\n       let books=[], categoryList=[];\r\n       if(isLoading){\r\n           books = exploreCategory.books.map(book =>  <Book \r\n                                                    key={book._id}\r\n                                                    id={book._id}\r\n                                                    title={book.title}\r\n                                                    author={book.author}\r\n                                                    coverUrl={book.bookCoverUrl}\r\n                                             />);\r\n           categoryList = exploreCategory.categories.map(category => {\r\n               if(category._id === props.match.params.catId){\r\n                 return <li style={{background:\"rgb(190, 190, 190)\"}}  onClick={()=> switchCategory(category._id)} key={category._id}><Link to={\"/bookself/\"+category._id}>{category.name}</Link></li>\r\n               }else{\r\n                 return <li  onClick={()=> switchCategory(category._id)} key={category._id}><Link to={\"/bookself/\"+category._id}>{category.name}</Link></li>\r\n               }\r\n           })\r\n       }\r\n \r\n        return(\r\n            <div style={{paddingTop:\"61px\", paddingBottom:\"30px\"}}>\r\n                <div className=\"mobile-catlist\">\r\n                    <ul className=\"categoryList\">\r\n                       {categoryList}\r\n                    </ul>\r\n                </div>\r\n                <div style={{width:\"100%\", height:\"auto\"}}>\r\n                    <div className=\"self-category\">\r\n                        <ul className=\"categoryList\">\r\n                           {categoryList}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"category-books\">\r\n                        {books}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default BookSelf;\r\n\r\n","F:\\Library-management\\client\\src\\containers\\AdminControl\\AdminControl.js",["150"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useMutation, gql} from '@apollo/client';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\n\r\nimport { server } from '../../Utils/utils';\r\n\r\nimport './AdminControl.css';\r\nimport Book from '../../components/AdminBook/AdminBook';\r\nimport AddBookModal from '../../components/Modals/AddBookModal/AddBookModal';\r\nimport UpdateBookModal from '../../components/Modals/UpdateBookModal/UpdateBooModal';\r\nimport SpinnerModal from '../../components/Modals/SpinnerModal/SpinnerModal';\r\nimport AdminLoginModal from '../../components/Modals/AdminLoginModal/AdminLoginModal';\r\nimport DeleteBookModal from '../../components/Modals/DeleteBookModal/DeleteBookModal';\r\n\r\nconst UPLOAD_FILE = gql`\r\n  mutation uploadFile($file: Upload!){\r\n    uploadFile(file: $file){\r\n      url\r\n    }\r\n  }\r\n`;\r\nconst UPLOAD_BOOK_COVER = gql`\r\n  mutation uploadBookCover($file: Upload!){\r\n    uploadBookCover(file: $file){\r\n      url\r\n    }\r\n  }\r\n`;\r\nfunction AdminControl(props){\r\n     const [adminAuth, setAdminAuth]= useState(true);\r\n     const [userName, setUserName] = useState('');\r\n    const [error_message, setErrorMessage] = useState('');\r\n     const [password, setPassword] = useState('');\r\n     const [addBookModal, setBookModal] = useState(false);\r\n     const [updateBookModal, setUpdateModal] = useState(false);\r\n     const [updateBookId, setUpdateBookId] = useState(null);\r\n     const [update, setUpdate]= useState(false);\r\n     const [bookTitle, setBookTitle]= useState('');\r\n     const [bookAuthor, setBookAuthor] = useState('');\r\n     const [bookCategory, setBookCategory] = useState('');\r\n     const [bookUrl, setBookUrl] = useState('');\r\n     const [bookCoverUrl, setCoverUrl] = useState('');\r\n     const [paidStatus, setPaidStatus] = useState(false);\r\n     const [complete, setComplete] = useState(false);\r\n     const [allCategories, setAllCategories] = useState([]);\r\n     const [allBooks, setAllBooks] = useState([]);\r\n     const [spinner, setSpinner] = useState(false);\r\n     const [deleteBookModal, setDeleteBookModal] = useState(false);\r\n     const [delId, setDelId]= useState(null);\r\n     const [delBookId, setDelBookId] = useState(null);\r\n\r\n  function userNameInputChgangeHandler (e){\r\n      setUserName(e.target.value);\r\n  }\r\n  function passwordInputChgangeHandler (e){\r\n     setPassword(e.target.value);\r\n  }\r\n\r\n     const addBookModalHandler = () => {\r\n        setBookTitle('');\r\n        setBookAuthor('');\r\n        setBookCategory(allCategories[0]._id);\r\n        setBookUrl('');\r\n        setCoverUrl('');\r\n        setPaidStatus(false);\r\n        addBookModal ? setBookModal(false) : setBookModal(true);\r\n     }\r\n     const updateBookModalHandler = (bookId, id) => {\r\n         setUpdateBookId(bookId);\r\n         setBookTitle(allBooks[id].title);\r\n         setBookAuthor(allBooks[id].author);\r\n         setBookCategory(allBooks[id].categoryId);\r\n         setBookUrl(allBooks[id].bookFileUrl);\r\n         setCoverUrl(allBooks[id].bookCoverUrl);\r\n         setPaidStatus(allBooks[id].paidStatus);\r\n         setUpdate(true);\r\n         updateBookModal ? setUpdateModal(false): setUpdateModal(true);\r\n     }\r\n     const updateBookModalHandler2 = () =>{\r\n       setUpdateModal(false);\r\n     }\r\n   const [uploadFile] = useMutation(UPLOAD_FILE, {\r\n      onCompleted: data => setBookUrl(data.uploadFile.url)\r\n  });\r\n  const [uploadBookCover] = useMutation(UPLOAD_BOOK_COVER, {\r\n    onCompleted: data => setCoverUrl(data.uploadBookCover.url)\r\n});\r\n  const handleFileChange = e => {\r\n      const file = e.target.files[0];\r\n      uploadFile({ variables: { file}})\r\n  }\r\n  const handleCoverFileChange = e =>{\r\n    const file = e.target.files[0];\r\n    console.log(file);\r\n    uploadBookCover({variables: { file }})\r\n  }\r\n  const bookTitleHandleChange = e =>{\r\n    setBookTitle(e.target.value);\r\n  }\r\n  const bookAuthorHandleChange = e =>{\r\n    setBookAuthor(e.target.value);\r\n  }\r\n  const bookCategoryChangeHandler = e =>{\r\n      setBookCategory(e.target.value)\r\n  }\r\n  const paidStatusHandler = e => {\r\n      setPaidStatus(e.target.value)\r\n  }\r\n\r\n  const adminLoginHandler = async() =>{\r\n    try {\r\n      if(userName && password){\r\n        setSpinner(true);\r\n        setAdminAuth(false);\r\n        const admin = await axios.post(\r\n          server,\r\n          {\r\n            query:`\r\n                query{\r\n                  adminLogin(userName:\"${userName}\", password:\"${password}\"){\r\n                    success\r\n                    token\r\n                    error_message\r\n                  }\r\n                }\r\n            `\r\n          }\r\n        );\r\n        console.log(admin);\r\n        if(admin.data.data.adminLogin.success){\r\n            localStorage.setItem('adminToken',admin.data.data.adminLogin.token);\r\n            setSpinner(false);\r\n            props.adminSetup();\r\n        }else{\r\n           setErrorMessage(admin.data.data.adminLogin.error_message);\r\n           setAdminAuth(true);\r\n        }\r\n        console.log(admin);\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  const addBookHandler = async() =>{\r\n    if(bookTitle, bookAuthor, bookCategory, paidStatus, bookUrl){\r\n     setSpinner(true);\r\n     setBookModal(false);\r\n    const addNewBook = await axios.post(\r\n      server,\r\n      {\r\n        query:`\r\n           mutation{\r\n             addBook(bookInput:{\r\n               title:\"${bookTitle}\", author:\"${bookAuthor}\", bookFileUrl:\"${bookUrl}\", bookCoverUrl:\"${bookCoverUrl}\" categoryId:\"${bookCategory}\", paidStatus:${paidStatus}}){\r\n                _id\r\n                title\r\n                author\r\n                bookFileUrl\r\n                bookCoverUrl\r\n                categoryId\r\n                paidStatus\r\n             }\r\n           }\r\n        `\r\n      }\r\n    );\r\n    console.log(addNewBook);\r\n    await setAllBooks(addNewBook.data.data.addBook);\r\n    setSpinner(false);\r\n    setBookTitle('');\r\n    setBookAuthor('');\r\n    setBookCategory(allCategories[0]._id);\r\n    setBookUrl('');\r\n    setCoverUrl('');\r\n    }\r\n  };\r\n  const updateBookHandler = async() =>{\r\n    setSpinner(true);\r\n    setUpdateModal(false);\r\n    const updateBook = await axios.post(\r\n      server,\r\n      {\r\n        query:`\r\n           mutation{\r\n             updateBook(\r\n               bookId:\"${updateBookId}\",title:\"${bookTitle}\", author:\"${bookAuthor}\", bookFileUrl:\"${bookUrl}\", categoryId:\"${bookCategory}\", paidStatus:${paidStatus}, bookCoverUrl:\"${bookCoverUrl}\"){\r\n               _id\r\n               title\r\n               bookFileUrl\r\n               bookCoverUrl\r\n               categoryId\r\n               author\r\n               paidStatus\r\n             }\r\n           }\r\n        `\r\n      }\r\n    );\r\n    await setAllBooks(updateBook.data.data.updateBook);\r\n    setSpinner(false);\r\n  };\r\n  const deleteBookModalHandler = (delBookId, delId) =>{\r\n        setDelId(delId);\r\n        setDelBookId(delBookId);\r\n        setDeleteBookModal(true);\r\n  }\r\n  const deleteBookModalCancelHandler = () =>{\r\n    setDelId(null);\r\n    setDelBookId(null);\r\n    setDeleteBookModal(false);\r\n}\r\n  const deleteBookHandler = async() =>{\r\n    try {\r\n      const books = allBooks.filter((book, id) => {\r\n          return delId !== id\r\n      });\r\n      setAllBooks(books);\r\n      setDeleteBookModal(false);\r\n       await axios.post(\r\n        server,\r\n        {\r\n          query:`\r\n              mutation{\r\n                deleteBook(bookId:\"${delBookId}\"){\r\n                    _id\r\n                  }\r\n              }\r\n           `\r\n        }\r\n      );\r\n   \r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  const dashboard = async() => {\r\n    try {\r\n      setSpinner(true);\r\n        const response = await axios.post(\r\n          server,\r\n          {\r\n            query:`\r\n                query{\r\n                  dashboard{\r\n                    categories{\r\n                      _id\r\n                      name\r\n                    }\r\n                    books{\r\n                      _id\r\n                      title\r\n                      author\r\n                      bookFileUrl\r\n                      bookCoverUrl\r\n                      categoryId\r\n                      paidStatus\r\n                  }\r\n                  }\r\n                }\r\n            `\r\n          }\r\n       );\r\n       console.log(response);\r\n       await setAllCategories(response.data.data.dashboard.categories);\r\n       await setAllBooks(response.data.data.dashboard.books);\r\n       setComplete(true);\r\n       setSpinner(false);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  useEffect(()=>{ dashboard()}, []);\r\n\r\n  let bookCategories, booksAll;\r\n  if(complete && props.adminAuth){\r\n    bookCategories = allCategories.map(category => {\r\n      return<option  key={category._id} value={category._id}>{category.name}</option>\r\n    });\r\n    if(allBooks.length > 0){\r\n        booksAll = allBooks.map((book, id) => <Book\r\n                  key={book._id}\r\n                  id={id} \r\n                  bookId={book._id} \r\n                  deleteHandler={deleteBookModalHandler} \r\n                  updateBookModalHandler={updateBookModalHandler}\r\n                  title={book.title}\r\n                  author={book.author}\r\n                  paidStatus={book.paidStatus}\r\n                  coverUrl={book.bookCoverUrl}\r\n                 />\r\n    );\r\n    }\r\n   \r\n  }\r\n        return(\r\n            <div className=\"Admin\">\r\n               <SpinnerModal show={spinner}></SpinnerModal>\r\n               <AdminLoginModal show={adminAuth}>\r\n                       <h3 style={{paddingTop:\"20%\"}}>Log in to admin panel</h3>\r\n                      <div>\r\n                        <input value={userName} onChange={userNameInputChgangeHandler} className=\"input-filed\" type=\"text\" placeholder=\"Username\"/>\r\n                     </div>\r\n                     <div>\r\n                        <input value={password} onChange={passwordInputChgangeHandler} className=\"input-filed\" type=\"password\" placeholder=\"password\"/>\r\n                     </div>\r\n                     <p style={{color:\"red\"}}>{error_message}</p>\r\n                      <button className=\"admin-login-button\" onClick={adminLoginHandler}>Login</button>\r\n               </AdminLoginModal>\r\n                <AddBookModal show={addBookModal} addBookModalHandler={addBookModalHandler}>\r\n                    <h3>Add new book</h3>\r\n                    <div>\r\n                      <input onChange={bookTitleHandleChange} value={bookTitle} className=\"input-filed\" type=\"text\" placeholder=\"Title\"/>\r\n                    </div>\r\n                    <div>\r\n                      <input onChange={bookAuthorHandleChange} value={bookAuthor} className=\"input-filed\" type=\"text\" placeholder=\"Author name\"/> \r\n                    </div>\r\n                    <div>\r\n                   </div>\r\n                   <h5>Book category</h5>\r\n                   <select name=\"categories\" className=\"Select-categories\" onChange={bookCategoryChangeHandler}>\r\n                      {\r\n                         bookCategories\r\n                      }\r\n                    </select>\r\n                                        \r\n                    <h5>Book status</h5>\r\n                    <input type=\"radio\"  value={false} onChange={paidStatusHandler} name=\"paidstatus\" />Free\r\n                    <input type=\"radio\"  value={true} onChange={paidStatusHandler} name=\"paidstatus\"/>Paid\r\n                    <div>\r\n                       <h5>Attach book cover</h5>\r\n                       <input type=\"file\" accept=\".png,.jpg\" onChange={handleCoverFileChange}/>\r\n                    </div>  \r\n                    <div>\r\n                       <h5>Attach book pdf</h5>\r\n                       <input type=\"file\" accept=\".pdf,.docx\" onChange={handleFileChange}/>\r\n                    </div>\r\n                    <button className=\"Book-submit-button\" onClick={addBookHandler}>Add Book</button>\r\n                    \r\n                </AddBookModal>\r\n                <UpdateBookModal show={updateBookModal} updateBookModalHandler={updateBookModalHandler2}>\r\n                  {\r\n                    update ? <div>\r\n                      <h3>Update book</h3>\r\n                    <div>\r\n                      <input onChange={bookTitleHandleChange} value={bookTitle} className=\"input-filed\" type=\"text\" placeholder=\"Title\"/>\r\n                    </div>\r\n                    <div>\r\n                      <input onChange={bookAuthorHandleChange} value={bookAuthor} className=\"input-filed\" type=\"text\" placeholder=\"Author name\"/> \r\n                    </div>\r\n                    <div>\r\n                   </div>\r\n                   <h5>Book category</h5>\r\n                   <select name=\"categories\" className=\"Select-categories\" onChange={bookCategoryChangeHandler}>\r\n                      {\r\n                         bookCategories\r\n                      }\r\n                    </select>\r\n                                        \r\n                    <h5>Book status</h5>\r\n                    <input type=\"radio\"  value={false} onChange={paidStatusHandler} name=\"paidstatus\" />Free\r\n                    <input type=\"radio\"  value={true} onChange={paidStatusHandler} name=\"paidstatus\"/>Paid  \r\n                    <div>\r\n                       <h5>Attach book cover</h5>\r\n                       <input type=\"file\" accept=\".png,.jpg\" onChange={handleCoverFileChange}/>\r\n                    </div> \r\n                    <div>\r\n                       <h5>Update book pdf</h5>\r\n                       <input type=\"file\" accept=\".pdf,.docx\" onChange={handleFileChange}/>\r\n                    </div>\r\n                    <button className=\"Book-submit-button\" onClick={updateBookHandler}>Update Book</button>\r\n                    </div>: <div></div>\r\n                  }\r\n               </UpdateBookModal>\r\n               <DeleteBookModal show={deleteBookModal} cancelBookModalHandler={deleteBookModalCancelHandler}>\r\n                     <p style={{paddingTop:\"30px\"}}>Are you sure delete this book permanently ? </p>\r\n                     <button onClick={deleteBookModalCancelHandler} className=\"book-del-cancel-button\">Cancel</button>\r\n                     <button onClick={deleteBookHandler}  className=\"book-del-button\">Delete</button>\r\n               </DeleteBookModal>\r\n               <div style={{width:\"100%\", height:\"56px\", background:\"white\"}}></div>\r\n               <div style={{width:\"85.8%\", height:\"40px\", margin:\"0 0 0 8%\"}}>\r\n                  <h2 style={{float:\"left\"}}>All Books</h2>\r\n                 <div style={{float:\"right\", margin:\"20px 0\"}}>\r\n                    <button onClick={addBookModalHandler} className=\"add-new-book-button\">Add new book</button>\r\n                    <Link to=\"/\" onClick={props.logOut} className=\"admin-logout-button\">Log out</Link>\r\n                 </div>\r\n               </div>\r\n               <div className=\"AdminView\">\r\n                     {booksAll}\r\n               </div>\r\n            </div>\r\n        );\r\n};\r\n\r\nconst mapStateToProps = state =>{\r\n  return{\r\n     userSetUp:state.auth.userSetUp,\r\n     auth: state.auth.auth,\r\n     userId: state.auth.userId,\r\n     paidMemberShip: state.auth.paidMemberShip,\r\n     adminAuth: state.auth.adminAuth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return{\r\n     adminSetup: () => {\r\n        dispatch ({\r\n           type: actionTypes.ADMIN_SETUP\r\n        });\r\n     },\r\n     logOut: () =>{\r\n       dispatch({\r\n         type: actionTypes.ADMIN_LOGOUT\r\n       });\r\n     }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminControl);\r\n\r\n","F:\\Library-management\\client\\src\\components\\NavBar\\NavBar.js",[],"F:\\Library-management\\client\\src\\components\\Book\\Book.js",[],"F:\\Library-management\\client\\src\\components\\AdminBook\\AdminBook.js",[],"F:\\Library-management\\client\\src\\components\\BooksCollection\\BooksCollection.js",[],"F:\\Library-management\\client\\src\\components\\Footer\\Footer.js",[],"F:\\Library-management\\client\\src\\containers\\Layout\\Layout.js",["151"],"import React, { useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\nimport { server } from '../../Utils/utils';\r\n\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport './Layout.css';\r\n\r\nfunction Layout(props){\r\n    const fetchUser= async() =>{\r\n        if(localStorage.TOKEN){\r\n            \r\n            let headers = {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+localStorage.TOKEN\r\n            };\r\n            const user = await axios.post(\r\n                server,\r\n                {\r\n                    query:`\r\n                       query{\r\n                           user(token:\"${localStorage.TOKEN}\"){\r\n                               _id\r\n                               paidMembership\r\n                           }\r\n                       }\r\n                    `                        \r\n                },\r\n                {\"headers\": headers}\r\n            );\r\n            console.log(user);\r\n            props.userSetUp(user.data.data.user._id, user.data.data.user.paidMembership);\r\n        }else{\r\n            props.userSetUp2();\r\n        }\r\n    }\r\n    useEffect(() => {\r\n            fetchUser();\r\n    }, []);\r\n\r\n        return(\r\n            <div>\r\n               <div className=\"nav-layout\">\r\n                  <NavBar />\r\n               </div>\r\n                <div className=\"LayoutContent\">\r\n                    {props.children}\r\n                </div>\r\n        \r\n            </div>\r\n        );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        auth: state.auth.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n       userSetUp: (userId, paidMemberShip) => {\r\n          dispatch ({\r\n             type: actionTypes.AUTH_USER,\r\n             userId,\r\n             paidMemberShip\r\n          });\r\n       },\r\n       userSetUp2: () =>{\r\n           dispatch({\r\n               type: actionTypes.USER_SETUP\r\n           })\r\n       }\r\n    };\r\n };\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps)(Layout);","F:\\Library-management\\client\\src\\components\\Review\\Review.js",[],"F:\\Library-management\\client\\src\\containers\\UserControl\\SignIn\\SignIn.js",[],"F:\\Library-management\\client\\src\\containers\\UserControl\\SignUp\\Signup.js",[],"F:\\Library-management\\client\\src\\components\\Modals\\AddBookModal\\AddBookModal.js",[],"F:\\Library-management\\client\\src\\components\\Modals\\BackDrop\\BackDrop.js",[],"F:\\Library-management\\client\\src\\components\\Modals\\SpinnerModal\\SpinnerModal.js",[],"F:\\Library-management\\client\\src\\store\\reducers\\index.js",[],"F:\\Library-management\\client\\src\\store\\reducers\\authReducer.js",[],"F:\\Library-management\\client\\src\\store\\actions\\actionTypes.js",[],"F:\\Library-management\\client\\src\\components\\Modals\\UserMenuModal\\UserMenuModal.js",[],"F:\\Library-management\\client\\src\\components\\Modals\\BackDrop2\\BackDrop2.js",[],"F:\\Library-management\\client\\src\\components\\Modals\\UpdateBookModal\\UpdateBooModal.js",[],"F:\\Library-management\\client\\src\\containers\\SavedBooks\\SavedBooks.js",[],"F:\\Library-management\\client\\src\\components\\Modals\\PaymentModal\\PaymentModal.js",[],"F:\\Library-management\\client\\src\\components\\Modals\\BackDrop3\\BackDrop3.js",[],"F:\\Library-management\\client\\src\\containers\\Payment\\Payment.js",[],"F:\\Library-management\\client\\src\\components\\Modals\\AdminLoginModal\\AdminLoginModal.js",[],"F:\\Library-management\\client\\src\\components\\Modals\\DeleteBookModal\\DeleteBookModal.js",[],"F:\\Library-management\\client\\src\\containers\\Search\\Search.js",[],"F:\\Library-management\\client\\src\\store\\reducers\\dataReducer.js",[],"F:\\Library-management\\client\\src\\Utils\\utils.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":56,"column":8,"nodeType":"158","endLine":56,"endColumn":10,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":8,"column":18,"nodeType":"162","messageId":"163","endLine":8,"endColumn":24},{"ruleId":"156","severity":1,"message":"164","line":172,"column":7,"nodeType":"158","endLine":172,"endColumn":9,"suggestions":"165"},{"ruleId":"156","severity":1,"message":"166","line":80,"column":11,"nodeType":"158","endLine":80,"endColumn":14,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":150,"column":17,"nodeType":"170","messageId":"171","endLine":150,"endColumn":18},{"ruleId":"156","severity":1,"message":"172","line":41,"column":8,"nodeType":"158","endLine":41,"endColumn":10,"suggestions":"173"},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchFeed' and 'props.homeSetUp'. Either include them or remove the dependency array.","ArrayExpression",["176"],"no-unused-vars","'domain' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchBook'. Either include it or remove the dependency array.",["177"],"React Hook useEffect has a missing dependency: 'fetchExploreCategory'. Either include it or remove the dependency array.",["178"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [fetchFeed, props.homeSetUp]",{"range":"188","text":"189"},"Update the dependencies array to be: [fetchBook]",{"range":"190","text":"191"},"Update the dependencies array to be: [fetchExploreCategory]",{"range":"192","text":"193"},"Update the dependencies array to be: [fetchUser]",{"range":"194","text":"195"},[1631,1633],"[fetchFeed, props.homeSetUp]",[5356,5358],"[fetchBook]",[2842,2845],"[fetchExploreCategory]",[1291,1293],"[fetchUser]"]